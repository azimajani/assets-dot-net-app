@model SMAT_Inventory.Models.UserViewModel
@using Newtonsoft.Json
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .avatar-lg {
        height: 11rem;
        width: 11rem;
    }
</style>


<div class="row">
    <div class="col-md-2">
        <img src="{{ (!empty($user->image) ? asset('assets').'/'.$user->image : asset('assets/images/users/avatar-2.jpg')) }}" alt="" class="rounded avatar-lg">
    </div>

    <div class="col-md-4">
        <div class="card overflow-hidden">
            <div class="bg-primary bg-soft">
                <div class="row">
                    <div class="col-7">
                        <div class="text-primary p-3">
                            <h5 class="text-primary">@Model.user.name's Profile !</h5>
                        </div>
                    </div>
                    <div class="col-5 align-self-end">
                        <img src="{{ asset('assets/images/profile-img.png') }}" alt="" class="img-fluid">
                    </div>
                </div>
            </div>
            <div class="card-body pt-3">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="pt-3">
                            <div class="row">
                                <div class="col-12">
                                    <p class="text-muted fw-medium">Role: <span class="badge bg-info rounded-pill">@Model.user.role_name</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="row">
        <div class="col-lg-12 margin-tb">
            <div class="pull-left">
                <h2></h2>
            </div>
            <div class="pull-right">
                <a class="btn btn-primary" href="{{ route('/user/list') }}"> Back</a>
            </div>
        </div>
    </div>

    <form id="fetch-reports" name="fetch-reports" method="post">

        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="form-group">
                    <input type="hidden" name="user_id" value="{{ $user->id }}">
                    <input type="hidden" name="user_name" value="{{ $user->name }}">
                    <input type="hidden" name="id" value="{{ $role->id }}">
                    <input type="hidden" name="name" value="{{ $role->name }}">
                </div>
            </div>
            <br />
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="form-group">
                    <strong>Permission:</strong>
                    <br />

                    <table class="table table-bordered" style="font-size: small;">
                        <tr>
                            <th>Module</th>
                            <th>Add</th>
                            <th>Edit</th>
                            <th>View</th>
                            <th>Delete</th>
                        </tr>
                        @{ var chk = "";}

                        @foreach (var permission in Model.userpermissions)
                        {

                            <tr>

                                <td>@permission.Module </td>
                                @if (permission.AddPermission != "") { chk = "checked"; } else { chk = ""; }
                                <td><input type="checkbox" id="add_@permission.Module" name="Addpermission[]" value="" @chk /></td>
                                @if (permission.EditPermission != "") { chk = "checked"; } else { chk = ""; }
                                <td><input type="checkbox" id="edit_@permission.Module" name="Editpermission[]" value="" @chk /></td>
                                @if (permission.ViewPermission != "") { chk = "checked"; } else { chk = ""; }
                                <td><input type="checkbox" id="view_@permission.Module" name="Viewpermission[]" value="" @chk /></td>
                                @if (permission.DeletePermission != "") { chk = "checked"; } else { chk = ""; }
                                <td><input type="checkbox" id="delete_@permission.Module" name="Deletepermission[]" value="" @chk /></td>
                            </tr>
                        }
                    </table>
                    <br />
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 text-center">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
   function collectPermissions() {
    var permissions = [];

    // List of modules generated by Razor
   // var modules = Html.Raw(Json.Serialize(Model.userpermissions.Select(p => p.Module)));
       var modules = @Html.Raw(JsonConvert.SerializeObject(Model.userpermissions.Select(p => p.Module)));

    // Loop through each module and collect checkbox values
    modules.forEach(function (module) {
        var add = document.getElementById('add_' + module).checked ? 'Add' : '';
        var edit = document.getElementById('edit_' + module).checked ? 'Edit': '';
        var view = document.getElementById('view_' + module).checked ? 'View' : '';
        var del = document.getElementById('delete_' + module).checked ? 'Delete' : '';

        permissions.push({
            UserId:@Model.user.id,
            Module: module,
            AddPermission: add,
            EditPermission: edit,
            ViewPermission: view,
            DeletePermission: del
        });
    });

    console.log(permissions); // You can now send this data to your server via AJAX or form submission
    return permissions;
}

// Example: Use this function on form submission
//document.querySelector('form').addEventListener('submit', function(event) {
$(document).on("submit", "#fetch-reports", function (e) {
    e.preventDefault();
    event.preventDefault(); // Prevent default form submission
    var permissions = collectPermissions();

    // Optionally send the data via AJAX to your server

    $.ajax({
        url: '/Assets/staffUpdateUserPermissions',
        method: 'POST',
        data: JSON.stringify({ permissions: permissions }),
        contentType: 'application/json',
        success: function(response) {
            alert('Permissions updated successfully');
        },
        error: function(error) {
            alert('Error updating permissions');
        }
    });

});

</script>
