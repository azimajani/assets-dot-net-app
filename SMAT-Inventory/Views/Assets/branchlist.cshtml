@model SMAT_Inventory.Models.branchViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-4">
        <div class="card mini-stats-wid">
            <div class="card-body">
                <div class="d-flex">
                    <div class="flex-grow-1">
                        <p class="text-muted fw-medium">Branches</p>
                        <h4 class="mb-0" id="zones_count">@Model.TotalCount</h4>
                    </div>

                    <div class="flex-shrink-0 align-self-center">
                        <div class="avatar-sm rounded-circle bg-primary mini-stat-icon">
                            <span class="avatar-title rounded-circle bg-primary">
                                <i class="bx bx-purchase-tag-alt font-size-24"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<table class="table table-bordered dt-responsive nowrap w-100">
    <div class="row">
        <div class="card mini-stats-wid">
            <div class="d-flex">
                <div class="flex-grow-1">
                    <div class="pagination">
                        @{
                            var pageCount = Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                        }

                        @for (var i = 1; i <= pageCount; i++)
                        {
                            <a class="btn @(i == Model.CurrentPage ? "btn-primary" : "btn-secondary")" href="@Url.Action("/branchlist", new { page = i, pageSize = Model.PageSize })">@i</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <thead>
        <tr>
            <th>
                <a href="@Url.Action("/branchlist", new { page = Model.CurrentPage, pageSize = Model.PageSize, sortColumn = "Zone_name", sortOrder = Model.SortColumn == "Zone_name" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                    Zone @(Model.SortColumn == "Zone_name" ? (Model.SortOrder == "asc" ? "▲" : "▼") : "")
                </a>
            </th>
            <th>
                <a href="@Url.Action("/branchlist", new { page = Model.CurrentPage, pageSize = Model.PageSize, sortColumn = "Code", sortOrder = Model.SortColumn == "Code" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                    Code @(Model.SortColumn == "Code" ? (Model.SortOrder == "asc" ? "▲" : "▼") : "")
                </a>
            </th>
            <th>
                <a href="@Url.Action("/branchlist", new { page = Model.CurrentPage, pageSize = Model.PageSize, sortColumn = "Name", sortOrder = Model.SortColumn == "Name" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                    Branch @(Model.SortColumn == "Name" ? (Model.SortOrder == "asc" ? "▲" : "▼") : "")
                </a>
            </th>
            <th>
                <a href="@Url.Action("/branchlist", new { page = Model.CurrentPage, pageSize = Model.PageSize, sortColumn = "Phone1", sortOrder = Model.SortColumn == "Phone1" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                    Phone @(Model.SortColumn == "Phone1" ? (Model.SortOrder == "asc" ? "▲" : "▼") : "")
                </a>
            </th>
            <th>
                <a href="@Url.Action("/branchlist", new { page = Model.CurrentPage, pageSize = Model.PageSize, sortColumn = "Email", sortOrder = Model.SortColumn == "Email" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                    Email @(Model.SortColumn == "Email" ? (Model.SortOrder == "asc" ? "▲" : "▼") : "")
                </a>
            </th>

            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var branch in Model.branchlist)
        {
            <tr>
                <td>@branch.zone_name</td>
                <td>@branch.code</td>
                <td>@branch.name</td>
                <td>@branch.phone1</td>
                <td>@branch.email</td>
                <td>

                    <div class="dropdown">
                        <a href="#" class="dropdown-toggle btn btn-primary" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="mdi mdi-dots-horizontal font-size-18"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" style="">
                            <li><a href="@Url.Action("branchadd", "Assets", new { id = branch.id })" class="dropdown-item btn btn btn-success" data-id="1"><i class="mdi mdi-pencil font-size-16 text-danger me-1"></i> Edit Branch</a></li>
                            <li><a class="dropdown-item btn btn-danger disable-branch" data-id="@branch.id"><i class="mdi mdi-trash-can-outline font-size-16 text-danger me-1"></i> Delete Branch</a></li>
                            <li><a class="dropdown-item btn btn-danger delete-branch" data-id="@branch.id"><i class="mdi mdi-trash-can-outline font-size-16 text-danger me-1"></i> Permanently Delete</a></li>
                        </ul>
                    </div>
                    @*@<button class="btn btn-sm btn-danger disable-zone" data-id="@zone.id">Disable</button>
            <button class="btn btn-sm btn-info zone-branches" data-zone="@zone.id">View Branches</button>
                    *@
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="pagination">
    @{
        var pageCountd = Math.Ceiling((double)Model.TotalCount / Model.PageSize);
    }

    @for (var i = 1; i <= pageCountd; i++)
    {
        <a class="btn @(i == Model.CurrentPage ? "btn-primary" : "btn-secondary")" href="@Url.Action("/branchlist", new { page = i, pageSize = Model.PageSize })">@i</a>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        $(document).on("click", ".disable-branch", function(event) {
            event.preventDefault(); // Prevent default action
            if (confirm('Do you want to remove this branch?')) {
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("branchdelete", "Assets")',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        $('.message').html('<div class="alert alert-' + response.type + ' alert-dismissible fade show" role="alert"><i class="mdi ' + response.icon + ' me-2"></i>' + response.message + '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>');
                        window.location.reload();
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            }
        });
        $(document).on("click", ".delete-branch", function(event) {
            event.preventDefault(); // Prevent default action
            if (confirm('Do you want to remove this branch permanently?')) {
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("branchpermanentlyelete", "Assets")',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        $('.message').html('<div class="alert alert-' + response.type + ' alert-dismissible fade show" role="alert"><i class="mdi ' + response.icon + ' me-2"></i>' + response.message + '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>');
                        window.location.reload();
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            }
        });
    });
</script>

